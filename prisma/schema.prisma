generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model artistTable {
  id                Int                 @id @default(autoincrement())
  email             String              @unique
  firstName         String?             @map("first_name")
  lastName          String?             @map("last_name")
  phone             String?
  postcode          String?
  firstNations      Indigenous?         @default(NO) @map("first_nations")
  bankAccountName   String?             @map("bank_account_name")
  bankBSB           String?             @map("bank_bsb")
  bankAccount       String?             @map("bank_account")
  createdAt         DateTime            @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt         DateTime            @updatedAt @map("updated_at")
  registrationTable registrationTable[]

  @@map("artist")
}

model registrationTable {
  id                  Int          @id @default(autoincrement())
  artistId            Int          @map("artist_id")
  registrationYear    String       @map("registration_year")
  closed              Boolean      @default(false)
  bumpIn              String?      @map("bump_in")
  bumpOut             String?      @map("bump_out")
  displayRequirements String?      @map("display_requirements")
  accommodation       Boolean?
  crane               Boolean?
  transport           Boolean?
  createdAt           DateTime     @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt           DateTime     @updatedAt @map("updated_at")
  entryTable          entryTable[]
  artist              artistTable  @relation(fields: [artistId], references: [id])

  @@map("registration")
}

model entryTable {
  id                  Int               @id @default(autoincrement())
  registrationId      Int               @map("registration_id")
  accepted            Boolean           @default(false)
  description         String?
  dimensions          String?
  enterMajorPrize     String?           @map("enter_major_prize")
  inOrOut             String            @map("in_or_out")
  material            String?
  price               Int?
  specialRequirements String?           @map("special_requirements")
  title               String
  createdAt           DateTime          @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt           DateTime          @updatedAt @map("updated_at")
  registration        registrationTable @relation(fields: [registrationId], references: [id])
  image               imageTable[]

  @@map("entry")
}

model imageTable {
  id               Int        @id @default(autoincrement())
  entryId          Int        @map("entry_id")
  imageURL         String     @map("image_url")
  imageFileName    String?    @map("image_file_name")
  originalFileName String?    @map("original_file_name")
  createdAt        DateTime   @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt        DateTime   @updatedAt @map("updated_at")
  entry            entryTable @relation(fields: [entryId], references: [id])

  @@map("image")
}

enum Indigenous {
  YES
  NO
  DECLINED

  @@map("indigenous")
}
